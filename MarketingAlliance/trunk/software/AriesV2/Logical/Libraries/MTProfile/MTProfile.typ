
TYPE
	MTProfileFunctionModeEnum : 
		( (*Interpolation modes.*)
		mtPROFILE_ZERO_ORDER_HOLD := 0, (*Zero-Order-Hold (incremental) interpolation.*)
		mtPROFILE_FIRST_ORDER_HOLD := 1 (*First-Order-Hold (linear) interpolation.*)
		);
	MTProfilePositionStateEnum : 
		(
		mtPROFILE_DEC_NEG_DIR := -3, (*Deceleration phase, negative direction of movement.*)
		mtPROFILE_CONST_VEL_NEG_DIR := -2, (*Constant velocity phase, negative direction of movement.*)
		mtPROFILE_ACC_NEG_DIR := -1, (*Acceleration phase, negative direction of movement.*)
		mtPROFILE_STANDSTILL := 0, (*Standstill.*)
		mtPROFILE_ACC_POS_DIR := 1, (*Acceleration phase, positive direction of movement.*)
		mtPROFILE_CONST_VEL_POS_DIR := 2, (*Constant velocity phase, positive direction of movement.*)
		mtPROFILE_DEC_POS_DIR := 3 (*Deceleration phase, positive direction of movement.*)
		);
	MTProfilePositionParameterType : 	STRUCT  (*Movement parameters.*)
		VelocityPosDirection : REAL; (*Maximum velocity of movement in the "positive" direction. Unit: [Units/s]. Valid value range: VelocityPosDirection > 0.*)
		VelocityNegDirection : REAL; (*Maximum velocity of movement in the "negative" direction. Unit: [Units/s]. Valid value range: VelocityNegDirection > 0.*)
		AccelerationPosDirection : REAL; (*Maximum acceleration when moving in the "positive" direction. Unit: [Units/s²]. Valid value range: AccelerationPosDirection > 0.*)
		DecelerationPosDirection : REAL; (*Maximum deceleration when moving in the "positive" direction. Unit: [Units/s²]. Valid value range: DecelerationPosDirection > 0.*)
		AccelerationNegDirection : REAL; (*Maximum acceleration when moving in the "negative" direction. Unit: [Units/s²]. Valid value range: AccelerationNegDirection > 0.*)
		DecelerationNegDirection : REAL; (*Maximum deceleration when moving in the "negative" direction. Unit: [Units/s²]. Valid value range: DecelerationNegDirection > 0.*)
		JoltTime : REAL; (*Jolt limit time. Unit: [s]. Valid value range: 0 <= JoltTime <= "10000 · task cycle time".*)
	END_STRUCT;
	MTProfileFunctionNodeType : 	STRUCT  (*Interpolation point.*)
		TimeValue : REAL; (*Time coordinate of an interpolation point in the array. Unit: [s]. Valid value range: TimeValue >= 0.*)
		FcnValue : REAL; (*Function value of an interpolation point in the array.*)
		Internal : MTProfileFcnNodeInternalType; (*Data for internal use.*)
	END_STRUCT;
	MTProfileFcnNodeInternalType : 	STRUCT  (*Internal variables of an interpolation point.*)
		TimeValue : REAL; (*Data for internal use.*)
		FcnValue : REAL; (*Data for internal use.*)
		C0 : REAL; (*Data for internal use.*)
		C1 : REAL; (*Data for internal use.*)
	END_STRUCT;
	MTProfilePosGenInternalType : 	STRUCT  (*Internal variables of function block MTProfilePositionGenerator.*)
		CycleTime : REAL; (*Task cycle time. Unit: [µs].*)
		Tv : ARRAY[0..2]OF LREAL; (*Data for internal use.*)
		ParametersValid : BOOL; (*Data for internal use.*)
		Parameter : MTProfilePositionParameterType; (*Data for internal use.*)
		ProfileNb : USINT; (*Data for internal use.*)
		ProfileID : USINT; (*Data for internal use.*)
		MovementCase : SINT; (*Data for internal use.*)
		MovementPhase : USINT; (*Data for internal use.*)
		MovementStep : USINT; (*Data for internal use.*)
		HomeVelocity : REAL; (*Data for internal use.*)
		HomeVelocityIntrude : USINT; (*Data for internal use.*)
		HomeVelocityDbl : LREAL; (*Data for internal use.*)
		HomeVelocityState : USINT; (*Data for internal use.*)
		Quantum0 : LREAL; (*Data for internal use.*)
		Quantum : REAL; (*Data for internal use.*)
		QuantumJolt : REAL; (*Data for internal use.*)
		QuantumSPF : LREAL; (*Data for internal use.*)
		Position0 : LREAL; (*Data for internal use.*)
		Position : REAL; (*Data for internal use.*)
		PositionJolt : REAL; (*Data for internal use.*)
		PositionSPF : LREAL; (*Data for internal use.*)
		PositionOffset : LREAL; (*Data for internal use.*)
		Velocity0 : LREAL; (*Data for internal use.*)
		Velocity : REAL; (*Data for internal use.*)
		VelocityJolt : REAL; (*Data for internal use.*)
		VelocitySPF : LREAL; (*Data for internal use.*)
		Acceleration0 : LREAL; (*Data for internal use.*)
		Acceleration : REAL; (*Data for internal use.*)
		AccelerationJolt : REAL; (*Data for internal use.*)
		AccelerationSPF : LREAL; (*Data for internal use.*)
		JoltTimeMax : REAL; (*Data for internal use.*)
		JoltTime : LREAL; (*Data for internal use.*)
		EndPosition : REAL; (*Data for internal use.*)
		PositionDifference : LREAL; (*Data for internal use.*)
		BrakingDistance : LREAL; (*Data for internal use.*)
		TopSpeed : LREAL; (*Data for internal use.*)
		ParameterV : ARRAY[0..5]OF REAL; (*Data for internal use.*)
		AccelerationV : ARRAY[0..19]OF LREAL; (*Data for internal use.*)
		ConstantV : ARRAY[0..19]OF LREAL; (*Data for internal use.*)
		DecelerationV : ARRAY[0..19]OF LREAL; (*Data for internal use.*)
		TimerV : ARRAY[0..1]OF LREAL; (*Data for internal use.*)
		QuantumBuffer : REFERENCE TO LREAL; (*Data for internal use.*)
		PositionBuffer : REFERENCE TO LREAL; (*Data for internal use.*)
		VelocityBuffer : REFERENCE TO LREAL; (*Data for internal use.*)
		AccelerationBuffer : REFERENCE TO LREAL; (*Data for internal use.*)
		BufCntMax : DINT; (*Data for internal use.*)
		BufCnt : DINT; (*Data for internal use.*)
		CntJoltTime : DINT; (*Data for internal use.*)
		BufCntJoltTime : DINT; (*Data for internal use.*)
		AtStandstill : BOOL; (*Data for internal use.*)
		ExecutionEvent : USINT; (*Data for internal use.*)
		Start : BOOL; (*Data for internal use.*)
		StartOld : BOOL; (*Data for internal use.*)
		Stop : BOOL; (*Data for internal use.*)
		StopOld : BOOL; (*Data for internal use.*)
		AbortOld : BOOL; (*Data for internal use.*)
		SetHomePositionOld : BOOL; (*Data for internal use.*)
		Update : BOOL; (*Data for internal use.*)
		UpdateOld : BOOL; (*Data for internal use.*)
		EnableOld : BOOL; (*Data for internal use.*)
		SystemInfo : SysInfo; (*Internally used function block.*)
		ConstTaskCycle : BOOL; (*Data for internal use.*)
		TimeCounterState : UINT; (*Data for internal use.*)
		MicroSecondsOld : UDINT; (*Data for internal use.*)
		SystemTicksOld : UDINT; (*Data for internal use.*)
		MemStatus : UINT;
		BufLen : UDINT;
		TCycle : REAL; (*TCycle = 0 for the first run and TCycle=Ts for all the others.*)
	END_STRUCT;
	MTProfileFcnGenInternalType : 	STRUCT  (*Internal variables of function block MTProfileFcnGenerator.*)
		CycleTime : REAL; (*Task cycle time. Unit: [µs].*)
		Tv : ARRAY[0..1]OF LREAL; (*Data for internal use.*)
		ParametersValid : BOOL; (*Data for internal use.*)
		Nodes : REFERENCE TO MTProfileFunctionNodeType; (*Data for internal use.*)
		NumberOfNodes : UINT; (*Data for internal use.*)
		TimeValueOrder : SINT; (*Data for internal use.*)
		Period : REAL; (*Data for internal use.*)
		TimerV : ARRAY[0..1]OF LREAL; (*Data for internal use.*)
		ResetTimer : BOOL; (*Data for internal use.*)
		Update : BOOL; (*Data for internal use.*)
		UpdateOld : BOOL; (*Data for internal use.*)
		EnableOld : BOOL; (*Data for internal use.*)
		Bootkey : UDINT; (*Data for internal use.*)
		SystemInfo : SysInfo; (*Internally used function block.*)
		ConstTaskCycle : BOOL; (*Data for internal use.*)
		TimeCounterState : UINT; (*Data for internal use.*)
		MicroSecondsOld : UDINT; (*Data for internal use.*)
		SystemTicksOld : UDINT; (*Data for internal use.*)
		BootkeyTimeCounter : UDINT; (*Data for internal use.*)
		PerTemp : REAL; (*Temporary period*)
		TCycle : REAL; (*TCycle = 0 for the first run and TCycle=Ts for all the others.*)
	END_STRUCT;
END_TYPE
